---
---


<!-- Questo è un frammento di codice HTML e JavaScript che implementa un sistema di cambio tema (dark mode/light mode) in una pagina web. Ecco una spiegazione dettagliata del codice:

<button>: Questo è un elemento HTML <button> che rappresenta un pulsante. All'interno del pulsante, è presente un'icona SVG che può rappresentare il sole o la luna, a seconda del tema attuale.

<style>: Questo blocco di stile contiene le regole CSS per lo stile del pulsante e le icone SVG. In particolare, le classi .sun e .moon vengono utilizzate per definire il colore di riempimento delle icone.

:global(...) (CSS Module): Queste regole CSS utilizzano :global(...) per dichiarare stili globali che influiscono su tutta la pagina. In questo caso, cambiano il colore di riempimento delle icone SVG quando il tema è impostato su "dark".

<script is:inline>: Questo è un blocco di script JavaScript che viene eseguito in linea con il documento HTML.

const theme = ...: Questa parte del codice determina il tema attuale. Controlla se esiste un valore nel localStorage del browser chiamato "theme" e, se presente, lo utilizza come tema corrente. In caso contrario, verifica se il sistema operativo preferisce un tema scuro o chiaro e lo imposta di conseguenza.

if (theme === 'light') { ... }: Questo blocco di codice aggiunge o rimuove la classe CSS dark dall'elemento <html> del documento, a seconda del tema attuale. Se il tema è impostato su "light", la classe dark viene rimossa, il che di solito significa che il tema è chiaro. Se il tema è impostato su "dark", la classe dark viene aggiunta, indicando che il tema è scuro.

window.localStorage.setItem('theme', theme);: Questa riga di codice memorizza il tema attuale nel localStorage del browser in modo che possa essere mantenuto tra le sessioni.

const handleToggleClick = () => { ... }: Questa funzione gestisce il clic sul pulsante di cambio tema. Quando il pulsante viene cliccato, cambia la classe dark sull'elemento <html>, aggiornando il tema. Inoltre, memorizza il nuovo tema nel localStorage.

document.getElementById("themeToggle").addEventListener("click", handleToggleClick);: Questa riga aggiunge un gestore di eventi al pulsante con l'ID "themeToggle". Quando il pulsante viene cliccato, viene chiamata la funzione handleToggleClick, che cambia il tema e aggiorna il localStorage.

In sintesi, questo codice implementa un pulsante di cambio tema che permette all'utente di passare tra il tema chiaro e scuro. Il tema corrente viene memorizzato nel localStorage del browser e può essere mantenuto tra le sessioni. La classe dark viene utilizzata per applicare lo stile appropriato in base al tema corrente. -->
<button id="themeToggle">
    <svg width="30px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
      <path class="sun" fill-rule="evenodd" d="M12 17.5a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zm0 1.5a7 7 0 1 0 0-14 7 7 0 0 0 0 14zm12-7a.8.8 0 0 1-.8.8h-2.4a.8.8 0 0 1 0-1.6h2.4a.8.8 0 0 1 .8.8zM4 12a.8.8 0 0 1-.8.8H.8a.8.8 0 0 1 0-1.6h2.5a.8.8 0 0 1 .8.8zm16.5-8.5a.8.8 0 0 1 0 1l-1.8 1.8a.8.8 0 0 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM6.3 17.7a.8.8 0 0 1 0 1l-1.7 1.8a.8.8 0 1 1-1-1l1.7-1.8a.8.8 0 0 1 1 0zM12 0a.8.8 0 0 1 .8.8v2.5a.8.8 0 0 1-1.6 0V.8A.8.8 0 0 1 12 0zm0 20a.8.8 0 0 1 .8.8v2.4a.8.8 0 0 1-1.6 0v-2.4a.8.8 0 0 1 .8-.8zM3.5 3.5a.8.8 0 0 1 1 0l1.8 1.8a.8.8 0 1 1-1 1L3.5 4.6a.8.8 0 0 1 0-1zm14.2 14.2a.8.8 0 0 1 1 0l1.8 1.7a.8.8 0 0 1-1 1l-1.8-1.7a.8.8 0 0 1 0-1z"/>
      <path class="moon" fill-rule="evenodd" d="M16.5 6A10.5 10.5 0 0 1 4.7 16.4 8.5 8.5 0 1 0 16.4 4.7l.1 1.3zm-1.7-2a9 9 0 0 1 .2 2 9 9 0 0 1-11 8.8 9.4 9.4 0 0 1-.8-.3c-.4 0-.8.3-.7.7a10 10 0 0 0 .3.8 10 10 0 0 0 9.2 6 10 10 0 0 0 4-19.2 9.7 9.7 0 0 0-.9-.3c-.3-.1-.7.3-.6.7a9 9 0 0 1 .3.8z"/>
    </svg>
  </button>
  
  <style>
    #themeToggle {
      border: 0;
      background: none;
    }
    .sun { fill: black; }
    .moon { fill: transparent; }
  
  
    :global(.dark) .sun { fill: transparent; }
    :global(.dark) .moon { fill: white; }
  </style>

<script is:inline>
    const theme = (() => {
      if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
        return localStorage.getItem('theme');
      }
      if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
        return 'dark';
      }
        return 'light';
    })();
  
    if (theme === 'light') {
      document.documentElement.classList.remove('dark');
    } else {
      document.documentElement.classList.add('dark');
    }
  
    window.localStorage.setItem('theme', theme);
  
    const handleToggleClick = () => {
      const element = document.documentElement;
      element.classList.toggle("dark");
  
      const isDark = element.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    }
  
    document.getElementById("themeToggle").addEventListener("click", handleToggleClick);
  </script>